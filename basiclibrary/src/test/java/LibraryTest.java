/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class LibraryTest {

    @Test public void testRollMethod() {
        Library classUnderTest = new Library();
        int[] rolls = classUnderTest.roll(10);
        assertTrue("Return array not of expected size", rolls.length==10);
        for (int i = 0; i < rolls.length; i++)
            assertTrue("Return array value not in expected range of 1-6", rolls[i] > 0 && rolls[i] < 7);
    }

    @Test public void testContainsDuplicatesMethod() {
        Library classUnderTest = new Library();
        int[] rollsNoDupes = {1,2,3,4,5};
        assertTrue("Return shows true for dupes, but should show false.", !classUnderTest.containsDuplicates(rollsNoDupes));
        int[] rollsWithDupes = {1,2,3,4,4};
        assertTrue("Return shows true for dupes, but should show false.", classUnderTest.containsDuplicates(rollsWithDupes));
    }

    @Test public void testCalculateAverageMethod() {
        int[] rolls = {1,2,3,4,5};
        double average = new Library().calculateAverage(rolls);
        assertTrue("Returned average incorrect.", average == (1+2+3+4+5)/5);
    }

    @Test public void testFindLowestAverageValueArrayMethod() {
        int[][] rolls = {
                {1, 2, 3, 4, 5},
                {4, 5, 6, 7, 8},
                {2, 3, 4, 5, 6}};
        int[] lowestRow = new Library().findLowestAverageValueArray(rolls);
        for (int i = 0; i < lowestRow.length; i++)
            assertTrue("Return array not the expected one", rolls[0][i] == lowestRow[i]);
    }

    @Test public void testAnalyzeMonthlyWeatherDataMethod() {
        String expected =
                "High 72\r\n" +
                "Low 51\r\n" +
                "Never saw temperature: 67\r\n" +
                "Never saw temperature: 68\r\n" +
                "Never saw temperature: 69\r\n" +
                "Never saw temperature: 63\r\n";
        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        PrintStream originalOut = System.out;
        System.setOut(new PrintStream(outContent));
        new Library().analyzeMonthlyWeatherData();
        System.setOut(originalOut);
        assertTrue(expected.equals(outContent.toString()));
    }

    @Test public void testTallyMethod() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = new Library().tally(votes);
        assertTrue(winner == "Bush");
    }
}
